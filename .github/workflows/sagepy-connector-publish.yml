name: Build and Publish Rust Binding

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build-and-publish:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13]
        python-version: ['3.11', '3.12']
        include:
          - os: ubuntu-latest
            python-version: '3.11'
            publish: true
          - os: ubuntu-latest
            python-version: '3.12'
            publish: true
          - os: windows-latest
            python-version: '3.11'
            publish: true
          - os: windows-latest
            python-version: '3.12'
            publish: true
          - os: macos-13
            python-version: '3.11'
            publish: true
            architecture: 'x86_64'
          - os: macos-13
            python-version: '3.12'
            publish: true
            architecture: 'x86_64'
          - os: macos-13
            python-version: '3.11'
            publish: true
            architecture: 'aarch64'
          - os: macos-13
            python-version: '3.12'
            publish: true
            architecture: 'aarch64'

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Maturin
        run: |
          python -m pip install --upgrade pip
          pip install maturin

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install Rust Target for Apple Silicon
        if: matrix.os == 'macos-13' && matrix.architecture == 'aarch64'
        run: rustup target add aarch64-apple-darwin

      - name: Build with Maturin
        run: |
          if [ "${{ matrix.os }}" == "macos-13" ] && [ "${{ matrix.architecture }}" == "aarch64" ]; then
            maturin build --release --target aarch64-apple-darwin
          else
            maturin build --release
          fi
        shell: bash

      - name: Publish
        if: matrix.publish
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.SAGEPY_CONNECTOR_PYPI_API_TOKEN }}
        run: |
          maturin publish --no-sdist
